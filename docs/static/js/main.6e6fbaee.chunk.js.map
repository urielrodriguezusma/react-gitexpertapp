{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","gifts","useFetchGifts","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAyBO,OACvCN,EAAc,MAIhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARjB,kBAYbM,GAZa,4CAAH,sDCERO,EAAe,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,wCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDFO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEzB,ECJ2B,SAACA,GAC5B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,qBAAU,WACRxB,EAASC,GAAUwB,MAAK,SAACC,GACrBH,EAAS,CAAEf,KAAMkB,EAAOL,SAAS,SAEpC,CAACpB,IAEGqB,EDRuBK,CAAc1B,GAAhCa,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAOnB,OACE,qCACE,oBAAIJ,UAAU,uCAAd,SAAsDhB,IACrDoB,GAAW,2CAEZ,qBAAKJ,UAAU,YAAf,SAEWH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,aElB9BgB,EAAc,WAEzB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEE,OACE,qCACC,+CACE,cAAC,EAAD,CAAaA,cAAeA,IAC9B,uBACA,6BAEM2C,EAAWnB,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAEKA,SAAUA,GADLA,YCV1B6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.6e6fbaee.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState('');\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue,...cats]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifts = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=qgKhB3NqYHiH9mU5tyNjsox1J9RGWyjm`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };","import React from 'react';\r\n\r\nexport const GiftGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__flash\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getGifts } from \"../helpers/getGifts\";\r\nimport { useFetchGifts } from \"../hooks/useFetchGifts\";\r\nimport { GiftGridItem } from \"./GiftGridItem\";\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n  \r\n  const {data:images,loading} = useFetchGifts(category);\r\n  \r\n  //   const [images, setImages] = useState([]);\r\n\r\n  //   useEffect(() => {\r\n  //    getGifts(category).then(gifts=>setImages(gifts));\r\n  //   },[category]);\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__headShake\">{category}</h3>\r\n      {loading && <p>Loading...</p> }\r\n\r\n      <div className=\"card-grid\">\r\n             {\r\n                 images.map(img => (\r\n                    <GiftGridItem key={img.id} {...img} />\r\n                 ))\r\n             }\r\n      \r\n        </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifts } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifts = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifts(category).then((gifts) => {\r\n        setstate({ data: gifts, loading: false });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nexport const GiftExpertApp=()=>{\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n      <>\r\n       <h2>GiftExpertApp</h2> \r\n         <AddCategory setCategories={setCategories}/>\r\n       <hr/>\r\n       <ol>\r\n          {\r\n             categories.map((category)=>\r\n                <GiftGrid \r\n                     key={category}    \r\n                     category={category}\r\n                />\r\n             )\r\n          }\r\n       </ol>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GiftExpertApp} from './GifExpertApp';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <GiftExpertApp />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}